#端口号
server:
  port: 8080
spring:
  # 解决高版本SpringBoot整合Swagger报错(启动错误)
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  #mysql配置
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/blog?serverTimezone=Asia/Shanghai&allowMultiQueries=true&rewriteBatchedStatements=true
    username: root
    password: moonlit
    druid:
      # 初始连接数
      initial-size: 10
      # 最小连接池数量
      min-idle: 10
      # 最大连接池数量
      max-active: 150
      # 配置获取连接等待超时的时间
      max-wait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 600000
      # 配置一个连接在池中最大生存的时间，单位是毫秒
      max-evictable-idle-time-millis: 900000
      # 配置检测连接是否有效
      validation-query: SELECT 1 FROM DUAL
      # 配置检测连接是否有效时间
      validation-query-timeout: 500
      # 在获取连接后，确定是否要进行连接空间时间的检查
      test-while-idle: true
      # 设置从连接池获取连接时是否检查连接有效性，true检查，false不检查
      test-on-borrow: false
      # 设置从连接池归还连接时是否检查连接有效性，true检查，false不检查
      test-on-return: false
  # 搜索模式 可选 elasticsearch、mysql
  search:
    mode: mysql
  # 文件上传限制
  servlet:
    multipart:
      max-request-size: 10MB
      max-file-size: 10MB
  # redis配置
  redis:
    # Redis服务器地址
    host: 127.0.0.1
    # Redis服务器连接端口
    port: 6379
    # Redis服务器连接密码（默认为空）
    password: redisMoonlit962464
    # 连接超时时间
    timeout: 10s
    lettuce:
      pool:
        # 连接池最大连接数
        max-active: 150
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: 5000ms
        # 连接池中的最大空闲连接
        max-idle: 100
        # 连接池中的最小空闲连接
        min-idle: 50
# 邮箱配置
  mail:
    default-encoding: UTF-8
    host: smtp.qq.com
    username: 1****@qq.com
    password: 1*********
    properties:
      mail:
        smtp:
          #连接邮件服务器超时时间，默认无限制
          connectiontimeout: 5000
          #读取邮件超时时间，默认无限制
          timeout: 5000
          #发送内容写入超时时间，默认无限制
          writetimeout: 5000
          ssl:
            #开启加密传输
            enable: true

  #   rabbitmq配置
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
    listener:
      simple:
        retry:
          enabled: true
            # 重试间隔时间
          initial-interval: 3000
            # 最大重试次数
          max-attempts: 3

  # 七牛云密钥管理
#oss:
#  url: http://s0cyicjxs.hd-bkt.clouddn.com/
##    endpoint: OSS配置endpoint
#  bucketName: y962464-blog
#  accessKeyId: _V6-MbFUmcp4N5xvc-NFiygE5rkD2SxIXMKy0s1x
#  accesskeySecret: RReErZ360rrLAoWaGUv0v2NOzBygl42syIbkAYIw

# 博客链接 域名后面要加/
blog:
  url: https://www.moonlit.icu/

# 文件上传策略 local、oss、cos
upload:
  strategy: oss
  local:
    # nginx映射本地文件路径
    url: https://file.moonlit.icu/
    # 本地文件存储路径
#    path: /usr/local/upload/
    path: /usr/local/upload/
  # 七牛云oss存储
  oss:
    url: https://static.moonlit.icu/
    endpoint: huadong
    bucketName: moonlit
    accessKey: _V6-M**********
    secretKey: RRe*******syIbkAYIw
  # cos存储
  cos:
    url: https://*********/
    secretId: 
    secretKey: kT7******z
    region: ap-nanjing
    bucketName: y962464-1320001640

# mybatisPlus配置
mybatis-plus:
  # mapper映射地址
  mapper-locations: classpath:mapper/*.xml
  # 实体类扫描包路径
  type-aliases-package: com.moon.entity
  configuration:
    # sql打印
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    # 开启驼峰命名
    map-underscore-to-camel-case: true
  global-config:
    db-config:
      # 数据库表前缀
      table-prefix: t_
# 线程池配置
thread:
  pool:
    core-pool-size: 5
    max-pool-size: 10
    queue-capacity: 50
    keep-alive-seconds: 60
# Sa-Token 配置 (文档: https://sa-token.cc)
sa-token:
  # token名称 (同时也是cookie名称)
  # token前缀
  # Token前缀 与 Token值 之间必须有一个空格。
  # 一旦配置了 Token前缀，则前端提交 Token 时，必须带有前缀，否则会导致框架无法读取 Token。
  # 由于Cookie中无法存储空格字符，也就意味配置 Token 前缀后，Cookie 鉴权方式将会失效，此时只能将 Token 提交到header里进行传输
  # token-prefix: Bearer
  # token 名称 (同时也是cookie名称)
  token-name: Authorization
  # token前缀
  token-prefix: Bearer
  # token有效期，单位s 默认30天, -1代表永不过期
  timeout: 1800
  # token临时有效期 (指定时间内无操作就视为token过期) 单位: 秒
  active-timeout: -1
  # 关闭自动续签
  auto-renew: false
  # 是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录)
  is-concurrent: true
  # token风格
  token-style: tik
  # 在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token)
  is-share: false
  # 同一账号最大登录数量
  max-login-count: 20
  # 是否从cookie中读取token
  is-read-cookie: false
  # 是否从请求体里读取token
  is-read-body: false
  # 是否从header中读取token
  is-read-header: true
  # 是否输出操作日志
  is-log: true
#开发打印debug
debug: true


# 第三方登录
oauth:
  gitee:
    client-id: 9565*****************a943b1ca7b9ad08f88d384a0
    client-secret: b77a806ceb***************e2cfe1d0621bdffa50424a6e0fa5a7
    grant_type: authorization_code
    redirect-url: https://www.moonlit.icu/oauth/login/gitee #Gitee回调地址
    access-token-url: https://gitee.com/oauth/token
    user-info-url: https://gitee.com/api/v5/user?access_token={access_token}
  github:
    client-id: 7ee9d*e3e5f4
    client-secret: 057b759*899fcd433aaa6
    redirect-url: https://www.moonlit.icu/oauth/login/github #Github回调地址
    access-token-url: https://github.com/login/oauth/access_token
    user-info-url: https://api.github.com/user
